import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *


clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument

clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.Elements)

clr.AddReference('RevitApi')
import Autodesk
from Autodesk.Revit.DB import *

import System

dataEnteringNode = IN

def GetBuiltInParam(paramName):
    builtInParams = System.Enum.GetValues(BuiltInParameter)
    test=[]
    for i in builtInParams:
        if i.ToString() == paramName:
            test.append(i)
            break
        else:
            continue
    return test[0]

ruleValStr = IN[1]

bip = GetBuiltInParam(IN[0])
pvp = ParameterValueProvider(ElementId(bip))
fnrvStr = FilterStringContains()
paramFr = FilterStringRule(pvp, fnrvStr, ruleValStr, False)
epf = ElementParameterFilter(paramFr)

results = FilteredElementCollector(doc).WherePasses(epf)
output=[]
for i in results:
    output.append(i.ToDSType(True))

out=output
